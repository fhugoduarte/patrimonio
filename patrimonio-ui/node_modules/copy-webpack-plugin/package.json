{
  "_args": [
    [
      {
        "raw": "copy-webpack-plugin@~4.4.1",
        "scope": null,
        "escapedName": "copy-webpack-plugin",
        "name": "copy-webpack-plugin",
        "rawSpec": "~4.4.1",
        "spec": ">=4.4.1 <4.5.0",
        "type": "range"
      },
      "/home/hugoduarte/patrimonio-ui/node_modules/@angular/cli"
    ]
  ],
  "_from": "copy-webpack-plugin@>=4.4.1 <4.5.0",
  "_id": "copy-webpack-plugin@4.4.1",
  "_inCache": true,
  "_location": "/copy-webpack-plugin",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/copy-webpack-plugin_4.4.1_1518102425425_0.9206213683332585"
  },
  "_npmUser": {
    "name": "michael-ciniawsky",
    "email": "michael.ciniawsky@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {
    "big.js": "3.2.0",
    "emojis-list": "2.1.0",
    "json5": "0.5.1",
    "object-assign": "4.1.1"
  },
  "_requested": {
    "raw": "copy-webpack-plugin@~4.4.1",
    "scope": null,
    "escapedName": "copy-webpack-plugin",
    "name": "copy-webpack-plugin",
    "rawSpec": "~4.4.1",
    "spec": ">=4.4.1 <4.5.0",
    "type": "range"
  },
  "_requiredBy": [
    "/@angular/cli"
  ],
  "_resolved": "https://registry.npmjs.org/copy-webpack-plugin/-/copy-webpack-plugin-4.4.1.tgz",
  "_shasum": "1e8c366211db6dc2ddee40e5a3e4fc661dd149e8",
  "_shrinkwrap": null,
  "_spec": "copy-webpack-plugin@~4.4.1",
  "_where": "/home/hugoduarte/patrimonio-ui/node_modules/@angular/cli",
  "author": {
    "name": "Len Boyette"
  },
  "bugs": {
    "url": "https://github.com/webpack-contrib/copy-webpack-plugin/issues"
  },
  "dependencies": {
    "cacache": "^10.0.1",
    "find-cache-dir": "^1.0.0",
    "globby": "^7.1.1",
    "is-glob": "^4.0.0",
    "loader-utils": "^0.2.15",
    "minimatch": "^3.0.4",
    "p-limit": "^1.0.0",
    "serialize-javascript": "^1.4.0"
  },
  "description": "Copy files && directories with webpack",
  "devDependencies": {
    "babel-cli": "^6.8.0",
    "babel-preset-es2015": "^6.6.0",
    "chai": "^3.4.0",
    "enhanced-resolve": "^3.4.1",
    "eslint": "^2.9.0",
    "is-gzip": "^2.0.0",
    "mocha": "^2.4.5",
    "ncp": "^2.0.0",
    "standard-version": "^4.2.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-ojaz8MpS3zoLJT/JbYMusYM+dCEArhW24hGAUPYPydTCS+87NFh2TWr85sywG3So4Q4E68QoerqQ+Ns1g0fhDg==",
    "shasum": "1e8c366211db6dc2ddee40e5a3e4fc661dd149e8",
    "tarball": "https://registry.npmjs.org/copy-webpack-plugin/-/copy-webpack-plugin-4.4.1.tgz",
    "fileCount": 11,
    "unpackedSize": 43838
  },
  "engines": {
    "node": ">= 4"
  },
  "files": [
    "dist"
  ],
  "gitHead": "2a6ec7908cebfe9e45fce41829ec14012a759502",
  "homepage": "https://github.com/webpack-contrib/copy-webpack-plugin",
  "keywords": [
    "webpack",
    "plugin",
    "transfer",
    "move",
    "copy"
  ],
  "license": "MIT",
  "main": "dist/index.js",
  "maintainers": [
    {
      "name": "bebraw",
      "email": "bebraw@gmail.com"
    },
    {
      "name": "d3viant0ne",
      "email": "wiens.joshua@gmail.com"
    },
    {
      "name": "kevlened",
      "email": "boyettel@gmail.com"
    },
    {
      "name": "michael-ciniawsky",
      "email": "michael.ciniawsky@gmail.com"
    }
  ],
  "name": "copy-webpack-plugin",
  "optionalDependencies": {},
  "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![test][test]][test-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Copy Webpack Plugin</h1>\n  <p>Copies individual files or entire directories to the build directory</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D copy-webpack-plugin\n```\n\n<h2 align=\"center\">Usage</h2>\n\n**webpack.config.js**\n```js\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\n\nconst config = {\n  plugins: [\n    new CopyWebpackPlugin([ ...patterns ], options)\n  ]\n}\n```\n\n> ℹ️ If you must have `webpack-dev-server` write files to output directory during development, you can force it with the [`write-file-webpack-plugin`](https://github.com/gajus/write-file-webpack-plugin).\n\n### `Patterns`\n\nA simple pattern looks like this\n\n```js\n{ from: 'source', to: 'dest' }\n```\n\nOr, in case of just a `from` with the default destination, you can also use a `{String}` as shorthand instead of an `{Object}`\n\n```js\n'source'\n```\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`from`](#from)|`{String\\|Object}`|`undefined`|Globs accept [minimatch options](https://github.com/isaacs/minimatch)|\n|[`fromArgs`](#fromArgs)|`{Object}`|`{ cwd: context }`|See the [`node-glob` options](https://github.com/isaacs/node-glob#options) in addition to the ones below|\n|[`to`](#to)|`{String\\|Object}`|`undefined`|Output root if `from` is file or dir, resolved glob path if `from` is glob|\n|[`toType`](#toType)|`{String}`|``|[toType Options](#toType)|\n|[`force`](#force)|`{Boolean}`|`false`|Overwrites files already in `compilation.assets` (usually added by other plugins/loaders)|\n|[`ignore`](#ignore)|`{Array}`|`[]`|Globs to ignore for this pattern|\n|`flatten`|`{Boolean}`|`false`|Removes all directory references and only copies file names.⚠️ If files have the same name, the result is non-deterministic|\n|[`transform`](#transform)|`{Function}`|`(content, path) => content`|Function that modifies file contents before copying|\n|[`cache`](#cache)|`{Boolean\\|Object}`|`false`|Enable `transform` caching. You can use `{ cache: { key: 'my-cache-key' } }` to invalidate the cache|\n|[`context`](#context)|`{String}`|`options.context \\|\\| compiler.options.context`|A path that determines how to interpret the `from` path|\n\n### `from`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    'relative/path/to/file.ext'\n    '/absolute/path/to/file.ext'\n    'relative/path/to/dir'\n    '/absolute/path/to/dir'\n    '**/*'\n    { glob: '\\*\\*/\\*', dot: true }\n  ], options)\n]\n```\n\n### `to`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    { from: '**/*', to: 'relative/path/to/dest/' }\n    { from: '**/*', to: '/absolute/path/to/dest/' }\n  ], options)\n]\n```\n\n### `toType`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`'dir'`**|`{String}`|`undefined`|If `from` is directory, `to` has no extension or ends in `'/'`|\n|**`'file'`**|`{String}`|`undefined`|If `to` has extension or `from` is file|\n|**`'template'`**|`{String}`|`undefined`|If `to` contains [a template pattern](https://github.com/webpack/file-loader#placeholders)|\n\n#### `'dir'`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    {\n      from: 'path/to/file.txt',\n      to: 'directory/with/extension.ext',\n      toType: 'dir'\n    }\n  ], options)\n]\n```\n\n#### `'file'`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    {\n      from: 'path/to/file.txt',\n      to: 'file/without/extension',\n      toType: 'file'\n    },\n  ], options)\n]\n```\n\n#### `'template'`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    {\n      from: 'src/'\n      to: 'dest/[name].[hash].[ext]',\n      toType: 'template'\n    }\n  ], options)\n]\n```\n\n### `force`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    { from: 'src/**/*' to: 'dest/', force: true }\n  ], options)\n]\n```\n\n### `ignore`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    { from: 'src/**/*' to: 'dest/', ignore: [ '*.js' ] }\n  ], options)\n]\n```\n\n### `flatten`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    { from: 'src/**/*', to: 'dest/', flatten: true }\n  ], options)\n]\n```\n\n### `transform`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    {\n      from: 'src/*.png',\n      to: 'dest/',\n      transform (content, path) {\n        return optimize(content)\n      }\n    }\n  ], options)\n]\n```\n\n### `cache`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    {\n      from: 'src/*.png',\n      to: 'dest/',\n      transform (content, path) {\n        return optimize(content)\n      },\n      cache: true\n    }\n  ], options)\n]\n```\n\n### `context`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin([\n    { from: 'src/*.txt', to: 'dest/', context: 'app/' }\n  ], options)\n]\n```\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`debug`](#debug)|`{String}`|**`'warning'`**|[Debug Options](#debug)|\n|[`ignore`](#ignore)|`{Array}`|`[]`|Array of globs to ignore (applied to `from`)|\n|[`context`](#context)|`{String}`|`compiler.options.context`|A path that determines how to interpret the `from` path, shared for all patterns|\n|[`copyUnmodified`](#copyUnmodified)|`{Boolean}`|`false`|Copies files, regardless of modification when using watch or `webpack-dev-server`. All files are copied on first build, regardless of this option|\n\n### `debug`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`'info'`**|`{String\\|Boolean}`|`false`|File location and read info|\n|**`'debug'`**|`{String}`|`false`|Very detailed debugging info|\n|**`'warning'`**|`{String}`|`true`|Only warnings|\n\n#### `'info'`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin(\n    [ ...patterns ],\n    { debug: 'info' }\n  )\n]\n```\n\n#### `'debug'`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin(\n    [ ...patterns ],\n    { debug: 'debug' }\n  )\n]\n```\n\n#### `'warning' (default)`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin(\n    [ ...patterns ],\n    { debug: true }\n  )\n]\n```\n\n### `ignore`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin(\n    [ ...patterns ],\n    { ignore: [ '*.js', '*.css' ] }\n  )\n]\n```\n\n### `context`\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin(\n    [ ...patterns ],\n    { context: [ '/app' ] }\n  )\n]\n```\n\n### `copyUnmodified`\n\n> ℹ️ By default, we only copy **modified** files during a `webpack --watch` or `webpack-dev-server` build. Setting this option to `true` will copy all files.\n\n**webpack.config.js**\n```js\n[\n  new CopyWebpackPlugin(\n    [ ...patterns ],\n    { copyUnmodified: true }\n  )\n]\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/bebraw\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/bebraw.png?v=3&s=150\">\n          </br>\n          Juho Vepsäläinen\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/d3viant0ne\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/d3viant0ne.png?v=3&s=150\">\n          </br>\n          Joshua Wiens\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/michael-ciniawsky\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/evilebottnawi\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/evilebottnawi.png?v=3&s=150\">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/copy-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/copy-webpack-plugin\n\n[node]: https://img.shields.io/node/v/copy-webpack-plugin.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/copy-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/copy-webpack-plugin\n\n[test]: https://secure.travis-ci.org/webpack-contrib/copy-webpack-plugin.svg\n[test-url]: http://travis-ci.org/webpack-contrib/copy-webpack-plugin\n\n[cover]: https://codecov.io/gh/webpack-contrib/copy-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/copy-webpack-plugin\n\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/webpack-contrib/copy-webpack-plugin.git"
  },
  "scripts": {
    "build": "babel src/ --out-dir dist/",
    "build:tests": "babel tests/ --out-dir compiled_tests/ && ncp tests/helpers compiled_tests/helpers",
    "lint": "eslint src/ tests/",
    "prepare": "npm run build",
    "pretest": "npm run lint && npm run build && npm run build:tests",
    "release": "standard-version",
    "test": "mocha compiled_tests/"
  },
  "version": "4.4.1"
}
