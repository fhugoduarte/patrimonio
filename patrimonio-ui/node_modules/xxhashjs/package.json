{
  "_args": [
    [
      {
        "raw": "xxhashjs@^0.2.1",
        "scope": null,
        "escapedName": "xxhashjs",
        "name": "xxhashjs",
        "rawSpec": "^0.2.1",
        "spec": ">=0.2.1 <0.3.0",
        "type": "range"
      },
      "/home/hugoduarte/patrimonio-ui/node_modules/postcss-url"
    ]
  ],
  "_from": "xxhashjs@>=0.2.1 <0.3.0",
  "_id": "xxhashjs@0.2.2",
  "_inCache": true,
  "_location": "/xxhashjs",
  "_nodeVersion": "8.9.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/xxhashjs-0.2.2.tgz_1516258668473_0.6614369279704988"
  },
  "_npmUser": {
    "name": "pierrec",
    "email": "pierre.curto@gmail.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "xxhashjs@^0.2.1",
    "scope": null,
    "escapedName": "xxhashjs",
    "name": "xxhashjs",
    "rawSpec": "^0.2.1",
    "spec": ">=0.2.1 <0.3.0",
    "type": "range"
  },
  "_requiredBy": [
    "/postcss-url"
  ],
  "_resolved": "https://registry.npmjs.org/xxhashjs/-/xxhashjs-0.2.2.tgz",
  "_shasum": "8a6251567621a1c46a5ae204da0249c7f8caa9d8",
  "_shrinkwrap": null,
  "_spec": "xxhashjs@^0.2.1",
  "_where": "/home/hugoduarte/patrimonio-ui/node_modules/postcss-url",
  "author": {
    "name": "Pierre Curto"
  },
  "bugs": {
    "url": "https://github.com/pierrec/js-xxhash/issues"
  },
  "dependencies": {
    "cuint": "^0.2.2"
  },
  "description": "xxHash in Javascript",
  "devDependencies": {
    "benchmark": "*",
    "uglifyjs": "^2.4.11",
    "webpack": "^3.10.0"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-AkTuIuVTET12tpsVIQo+ZU6f/qDmKuRUcjaqR+OIvm+aCBsZ95i7UVY5WJ9TMsSaZ0DA2WxoZ4acu0sPH+OKAw==",
    "shasum": "8a6251567621a1c46a5ae204da0249c7f8caa9d8",
    "tarball": "https://registry.npmjs.org/xxhashjs/-/xxhashjs-0.2.2.tgz"
  },
  "gitHead": "6c5c2d847035f7a8f4ac838d61074c3ab5c0e0e9",
  "homepage": "https://github.com/pierrec/js-xxhash",
  "keywords": [
    "xxhash",
    "xxh"
  ],
  "license": "MIT",
  "main": "./lib/index.js",
  "maintainers": [
    {
      "name": "pierrec",
      "email": "pierre.curto@gmail.com"
    }
  ],
  "name": "xxhashjs",
  "optionalDependencies": {},
  "readme": "# Javascript implementation of xxHash\n\n## Synopsis\n\nxxHash is a very fast hashing algorithm (see the details [here](https://code.google.com/p/xxhash/)). xxhashjs is a Javascript implementation of it, written in 100% Javascript. Although not as fast as the C version, it does perform pretty well given the current Javascript limitations in handling unsigned 32 bits integers.\n\n\n## Installation\n\nIn nodejs:\n\n    npm install xxhashjs\n\nIn the browser, include the following, and access the constructor with _XXH_:\n\n```javascript\n<script src=\"/your/path/to/xxhash.js\"></script>\n```\n\n\n## Examples\n\n* In one step:\n```javascript\nvar h = XXH.h32( 'abcd', 0xABCD ).toString(16)\t// seed = 0xABCD\n```\n> 0xCDA8FAE4\n\n* In several steps (useful in conjunction of NodeJS streams):\n```javascript\nvar H = XXH.h32( 0xABCD )\t// seed = 0xABCD\nvar h = H.update( 'abcd' ).digest().toString(16)\n```\n> 0xCDA8FAE4\n\n* More examples in the examples directory:\n\t* Compute xxHash from a file data\n\t* Use xxHashjs in the browser\n\n\n## Usage\n\n* XXH makes 2 functions available for 32 bits XXH and 64 bits XXH respectively, with the same signature:\n\n\t* XXH.h32\n\t* XXH.h64\n\n* In one step:\n`XXH.h32(<data>, <seed>)`\nThe data can either be a string, an ArrayBuffer or a NodeJS Buffer object.\nThe seed can either be a number or a UINT32 object.\n\n* In several steps:\n\t* instantiate a new XXH object H:\n`XXH.h32(<seed>)` or `XXH.h32()`\nThe seed can be set later on with the `init` method\n\n\t* add data to the hash calculation:\n`H.update(<data>)`\n\n\t* finish the calculations:\n`H.digest()`\n\nThe object returned can be converted to a string with `toString(<radix>)` or a number `toNumber()`.\nOnce `digest()` has been called, the object can be reused. The same seed will be used or it can be changed with `init(<seed>)`.\n\n\n## Methods\n\n* `XXH.h32()`\n\t* `.init(<seed>)`\n\tInitialize the XXH object with the given seed. The seed can either be a number or a UINT32 object.\n\t* `.update(<data>)`\n\tAdd data for hashing. The data can either be a string, an ArrayBuffer or a NodeJS Buffer object.\n\n* `digest()` (_UINT32_)\n\tFinalize the hash calculations and returns an UINT32 object. The hash value can be retrieved with toString(<radix>).\n\n* `XXH.h64()`\n\t* `.init(<seed>)`\n\tInitialize the XXH object with the given seed. The seed can either be a number or a UINT64 object.\n\t* `.update(<data>)`\n\tAdd data for hashing. The data can either be a string, an ArrayBuffer or a NodeJS Buffer object.\n\t* `.digest()` (_UINT64_)\n\tFinalize the hash calculations and returns an UINT64 object. The hash value can be retrieved with toString(<radix>).\n\n\n## License\n\nMIT",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/pierrec/js-xxhash.git"
  },
  "scripts": {
    "prepublish": "webpack && uglifyjs -m -c -o build/xxhash.min.js build/xxhash.js",
    "test": "mocha"
  },
  "version": "0.2.2"
}
